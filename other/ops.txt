服务器检查
	#dmidecode | egrep -i 'manufacturer|product|vendor|system' | uniq
	lscpu          #Socket 具体是指的主板上 CPU 的插槽数量,称为路。Core 具体是指 CPU 的核心。thread 是指的每个 Core 的硬件线程数，超线程。逻辑 CPU 的数量就是 Socket * Core * Thread
	ip -4 a
	timedatectl
	df -hT
	free -h
	hostname
	uname -m && getconf LONG_BIT      
	uname -r    #内核版本
	uptime    #负载与开机时间，awk '{a=$1/86400;b=($1%86400)/3600;c=($1%3600)/60;d=$1%60} {printf("%ddays, %d:%d:%d\n",a,b,c,d)}' /proc/uptime
	ps -ef | egrep "python| exec"
	cat /etc/redhat-release  //  cat /etc/issue // cat /proc/version // cat /etc/os-release // cat /etc/lsb-release #查看服务器内核版本

开机自启服务：网卡，时间同步，关闭selinux，su/sudo
生成随机密码
终端操作命令：stty
内核优化：
	net.ipv4.ip_forward = 1
	net.ipv4.tcp_fin_timeout = 600
	net.ipv4.tcp_max_syn_backlog = 10240
	net.ipv4.tcp_keepalive_time = 12000
	net.ipv4.tcp_synack_retries = 3
	net.ipv4.tcp_syn_retries = 3
	net.ipv4.tcp_max_orphans = 8192
	net.ipv4.tcp_max_tw_buckets = 2000
	net.ipv4.tcp_window_scaling = 0
	net.ipv4.tcp_sack = 0
	net.ipv4.tcp_timestamps = 0
	net.ipv4.tcp_syncookies = 1
	net.ipv4.tcp_tw_reuse = 1
	net.ipv4.tcp_tw_recycle = 1
	net.ipv4.ip_local_port_range = 1024 65000
	net.ipv4.icmp_echo_ignore_all = 1
	net.core.somaxconn= 1024
	vm.overcommit_memory=1
	net.ipv4.icmp_echo_ignore_broadcasts = 1
	net.ipv4.icmp_echo_ignore_all = 1
	net.ipv4.ip_default_ttl = 128
	net.ipv4.conf.all.accept_redirects = 0
	net.ipv4.ip_local_reserved_ports=80,443,1873,9081-9088'
文件句柄优化：
	echo '* soft nproc 65535
	* hard nproc 65535
	* soft nofile 65535
	* hard nofile 65535' >> /etc/security/limits.conf

隐藏服务器版本：
    mv /etc/issue /etc/system.bak
    mv /etc/issue.net /etc/system.netbak
远程登陆优化
        sed -i '38a PermitRootLogin no ' /etc/ssh/sshd_config
        sed -i '38a UseDNS no ' /etc/ssh/sshd_config
        sed -i '38a MaxAuthTries 3' /etc/ssh/sshd_config
添加自定义用户并设置密码/自定义目录
下载：基础依赖包，数据库备份包，常用包，提供服务包
防火墙：建立黑白名单，关闭多余的端口，禁ping
优化环境：
	export TMOUT=600 终端退出时间  
	HISTSIZE=1000
	export HISTTIMEFORMAT="%F %T"




tomcat：
下载：官网下载镜像下载
tomcat8 tomcat-users相关配置：百度
#######JDK环境变量########################
export JAVA_HOME=/opt/apps/jdk
export JRE_HOME=$JAVA_HOME/jre
export CLASSPATH=$JAVA_HOME/lib:$JAVA_HOME/lib/tools.jar
export PATH=$PATH:$JAVA_HOME/bin:$JAVA_HOME/jre/bin

jenkins：
1.安装
	1.在官网下载镜像下载
	2.官网下载war包
		1.执行命令“java -jar jenkins.war”安装。注意：Jenkins 需要运行Java 5以及以上的版本。
		2.将jenkins.war文件放入tomcat下的webapps目录下，启动tomcat时，会自动在webapps目录下建立jenkins目录
2.配置文件，启动用户的家目录下的.jenkins目录中





Java进程CPU占用高导致的网页请求超时的故障排查
	01.top
	02.top -Hbp 7163 | awk '/java/ && $9>50'      #查看cpu高的线程
	03.printf "%x\n" 16298                                      #转换为16进制
	04.jstack 7163 | grep "3faa" -A 30	          #查看运行的问题代码段
	05.mysql -uroot -p -e "show full processlist" > mysql_full_process.log  #先打印了所有在跑的数据库线程
	06.grep Query mysql_full_process.log                 #过滤log文件
	07.select count(1) from table_name；	              #表中数据量
	08.show create table table_name\G	            #是否有索引
	09.delete from table_name where xxxx_time < '2019-07-01 00:00:00' or xxxx_time is null;      #清理数据只保留一个月的数据
	10.alter table table_name add index (device_uuid);	 	创建索引



















