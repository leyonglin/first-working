ADMIN

了解透彻常用命令的用法
    lscpu
    cat /proc/meminfo
    free
    free -mg
    free -mm
    hostname/hostnamectl
    uname -r
    cat /etc/redhat-release
    history > test.txt
{a,min,xy}：多组不同的字符串，全匹配

man 7 signal   查看kill的信号名称作用

wget -o

设置临时ip:ifconfig  []    route
网络连接：nmcli con[nection]   (show|modify|up/down)
dns测试：host 域名 [dns服务器]
安装新内核：rpm -ivh

useradd usermod userdel  id passwd
groupadd gpasswd groupmod groupdel
归档与压缩tar zip
NTP:data  timedatactl  hwclock
周期性计划任务：crontab

重新下载软件，先把原来配置删除

chmod  chown setfacl getfacl 
LDAP家目录漫游:改变登录验证方式，客户端通过NFS挂载服务端普通用户家目录[autofs]，showmount

su - student -c ls

ENGINEER

fdisk(MBR/msdos)  partprobe  mkfs  mount
LVM:分区----逻辑卷---格式化
创建卷组--创建逻辑卷--拓展卷组--拓展逻辑卷--刷新文件系统

mail
用户名@邮件域
mail -s test root@localhost
cat  文件名 | mail -s "邮件主题"  root@localhost
mail -s test root@localhost < /etc/hosts

ls abc 1>stdin.out  2>&1  把标准输出重定向到stdin.out
再把错误重定向到标准输出，即ls abc &>stdin.out
()作为整体匹配[选择部分 (|) ]        [a-z] 可有可无匹配单字符  
{,} 准确都匹配或者限制次数           <标准>--标准
$$当前运行进程的PID号   $!最后一个进程的进程号

~student/

ipv4   32二进制，4十进制，用.分隔
ipv6   128二进制，8十六进制，用:分隔   连续0可省略

team链路聚合：热备与轮询  创建team并设置模式--添加slave-设置team-ip(属性)--启动

iscsi 网际虚拟磁盘scsi接口  iqn:iscsi名称规范
backstore后端存储--target磁盘组--lun逻辑单元
acl--portals

bash -x 文件名      调试状态(程序会执行)

grep -i忽略大小写  -v取反   -[BAC]显示前/后/周围行     -c统计匹配数 -n显示匹配行号 -r递归  -w精准 -m限制输出匹配行数  -E支持正则
     {-b匹配内容在一行中第几个字符开始  -o仅输出匹配内容}   -l输出在哪个文件(不输出内容,不加选项是文件内容一起输出)  -e支持多个匹配条件(-e "a" -e "b")     --include/--exclude *.{php,html}或--exclude-from filelist(文件列表)[需递归] 
zgrep  error  *.gz               在gzip压缩文件中查找        
fgrep  -f  f_patt  f_name     patt文件中一行一个查询条件
egrep -v '.'      egrep '^$'   匹配空行

echo -e "a\nb\na\nd\nc"


tr '[a-z]' '[A-Z]' < a.php     文件
tr '[a-z]' '[A-Z]' <<< a.php   标准输入


yum search/list  包名 

ac 登录时间

df -h /dev

chcon  semanage   elinks  curl

https：ssl 安全套接字层   tls安全传输层协议
pki:公钥基础设施   CA:数字证书授权中心

fdisk -->msdos   parted --gpt 

mkswap   swapon/swapoff

netstat
/bin/ps -Ao pid,tt,user,fname,rsz

SERVICES

du -sh /boot     <-->   ls -ld /boot
hwclock        date +"%M"    
zip -r fname.zip  fname       unzip  fname -d  path(会显示路径)
createrepo
部署ftp，httpd的yum源(挂载)

vim  P d^ d$      :r/w  fname  :[%]  s///[g]
:set nu|nonu     :set ai|noai

顺序加载(system v)事件触发(upstart)并行启动(systemd)
unit配置单元种类：
service:后台独立服务 
socket:套接字，类似临时服务  
target:一套配置单元的集合，类似运行级别  
device:对应udev规则标记的某个设备  
automount:触发挂载点
列出活动的系统服务:systemctl -t service [--all]
启动服务:systemctl start * -->/usr/lib/systemd/system/*.service

列出可用运行级别:systemctl -t target
设置默认级别:systemctl set-default  *.target
查看:systemctl  get-default
切换模式:systemctl  isolate  *.target   -- [ runlevel ]

DNS域名解析(BIND服务):TTL生存时间 SOA授权信息开始 
                                   FQDN完全合格主机名
解析记录:NS  A  AAAA  CNAME
PTR记录，邮件交换记录，常用于反向解析
递归(向其他DNS服务器代询)与迭代(根)查询
dig @DNS服务器  目标地址   /  host/nslookup 域名  DNS服务器
全局转发缓存DNS服务器
访问压力大的网站，购买CDN服务结合DNS的分离解析(多个view视图)

RAID廉价冗余磁盘阵列:RAID0  条带模式 提高效率
RAID1 镜像模式(一个文档复制成多份，提高可靠性)
raid5与raid6
硬RAID:主机--阵列卡--磁盘--操作系统--数据      raid控制卡管理阵列
软RAID:主板--磁盘--操作系统--raid软件--数据   操作系统管理阵列

查看进程：
进程树:pstree  [选项a/p]  [PID或用户名]  
查看子进程树:pstree -p PID
进程快照:ps  aux(用户终端)    elf(所有) -------man ps 
ps  -elf  |  head  -1 ; ps  -elf  |  grep  sshd
检索进程:pgrep [选项]  查询条件  -lx -U -t 
进程动态排名:top  [-d 刷新时间]  [-U 用户名] [-n 次数] 
交互  ？、P、M、T、k杀死指定进程、q    1切换cpu
top显示的Tasks:485 total表示进程总量信息

控制进程：
&        Ctrl+z 暂停当前进程并转入后台  
fg将后台任务恢复到前台运行   bg激活后台被挂起任务
jobs [-l]查看后台任务列表  
 
杀死进程：
Ctrl+c(单)      kill  PID(单)    killall 进程名(多)   pkill 查找条件(更多)

系统服务日志由rsyslog统一记录/管理

已登录:users who w      登录:last成功 lastb失败     tailf
journalctl  [-u 服务名][-n 消息条数][-p 优先级][起始时间]---man/百度

pstree  -up  PID
 dmesg  |  grep  -i  mouse

DHCP:动态主机配置协议(服务器/路由器)
PXE:预启动执行环境，在操作系统之前执行
组件：DHCP定位引导程序  TFTP提供引导程序(内核/初始化文件)下载  
         HTTP提供yum源与自动应答文件(kickstart)

modify：文档的内容变更
attrib：文档的权限、归属、修改时间、访问控制列表等变更


NET
iso国际标准化组织    osi七层参考模型    TCP/IP五层模型
网卡，中继器，
交换机，VLAN，中继链路trunk--VLAN标识，以太通道(接口捆绑，并行链接)

网络层:逻辑寻址，连接不同媒介，最佳路径
ping工具具有基于ICMP协议定义的信息类型，检测双向通路的连通性
路由(IP路由/转发)，路由表通过静态和动态路由获取
动态路由协议(OSPF开放式最短路径优先)
三层交换机:SVI交换虚拟接口，创建vlan并配置ip(二层) 路由接口(三层)
ACLaccess control list:访问控制列表(标准|拓展)
NAT网络地址转换:静态转换/[端口映射]和端口多路复用(PAT)
STP生成树协议:逻辑上断开环路，防止广播风暴产生
网桥ID(BID):BID(mac)值最小为根网桥及网桥优先级     
PVST+方案:不同vlan-id主次根不同实现负载均衡
HSRP:热备份路由选择协议    活跃/备份/虚拟路由     占先权

链路聚合(线路冗余)--以太通道(线路冗余)+stp(线路冗余且负载均衡)(二层)
---[OSPF]---HSRP(网关冗余)


SHELL

shell是linux内核与用户之间的解释器程序 
sh是bash的符号链接
查看变量set/env[所有环境变量]
预定义变量:$?  $$  $!  $0  $*  $# $@

#!/bin/bash
while read name surname num;
do
echo $num $name $surname >> sort.txt
done < test1.txt

while :     while [ ]

stty -echo     stty echo
局部变量只在当前shell[不包括脚本]有效,全局变量都有效,包括脚本
export a=123(可一次性发布多个或已定义的)       
su - student -c "echo $a"
a=123   b=123     echo $ab  ${a}b  ${a}{b} ${ab} ${a}${b}
read -p 提示符 与 变量需要有空格

Ctrl+E 移至行尾    Ctrl+S  挂起终端    Ctrl+Q 解挂
\转义  |  >  >>  标准输出1 标注错误2   &     <(文件)  <<(键盘EOF)  <<<(变/常量) 标准输入0  
cat <<EOF > /etc/yum.repos.d/server.repo
cat /tmp/aaa.txt | xargs ls -l  查两层信息
tar caf file.tar.*  file    根据后缀自动判断压缩类型(gz压缩效果最好)
file  file.tar.* 查看类型     stat name  查看磁盘信息

unset  unalias
/etc/profile    ~/.bash_profile
双引号界定一个完整字符串      单引号界定并屏蔽特殊符号 
``或$()命令替换

+ - * / %
expr + - \* / %
$[整数 运算符 整数......]或(( )) echo $[1*2*3+4] 或 $[X+21]或 $[i+=2] --X与i是变量  ---运算
let i++  /  i-=7 / s+=i  ---  自增/减/乘/除/摸       
echo "scale=4;$A*56.56;5/3" | bc  或 echo "$A <= 3"|bc  --支持小数运算

子串截取:${变量:起始位置0:长度}   
             expr substr 变量 起始位置1 长度
             echo 变量|cut -b 起始位置1-结束位置
子串替换:一个:${变量/old/new}  全部:${变量//old/new}
掐头:最近 ${变量#*关键词}  最长${变量##*关键词}
去尾:       ${变量%关键词*}       ${变量%%关键词*}

初始值：${变量:-初始值}

数组:数组名=(值1 值2 ...)  或  数组名[下标0]=值
获取:单个 ${数组名[下标]}   多个 ${数组名[@]:起始下标:元素个数}
       所有 ${数组名[@]}       元素个数 ${#数组名[@]}

#一般与数量有关
echo ${#str}      
echo $str | wc -L   
awk内置变量length
echo -n "abc" | wc -c

字符串可以是数组的一个元素，子串是字符串的一个元素 

条件测试:     ！表示取反    表达式=选项 参数    ---只做检索不输出
   test测试:test 表达式  或 [  表达式  ](注意空格) --->help test
   多条件判断:   &&   ||   ； 
[ $(who | wc -l) -ge 3 ]
非空与0为True  空与非0位False
rw超级管理员不管有没有都能读写

if case选择结构   for遍历/列表式循环 while条件式循环
break   continue   exit   wait等所有后台进程结束才结束脚本
函数:function 函数名 { }   或  函数名(){ }

expect 预期交互   expect脚本的最后一行默认不执行

Regular Express 正则表达式  模糊匹配

mail -s test root < /etc/passwd        非交互
mail -s test root << EOF   内容  EOF    交互

正则组合查询: grep -E '^(root|daemon)' /etc/passwd
egrep -i 'eth|network|bluetooth' /var/log/dmesg

sed流式编辑器，逐行处理
sed  [选项rni]  '/正则/! num编辑指令pds'  文件.. .. 
3p,5p  3p;5p  3,+5p  1~2p  2~2p   $=  /xmd/!    s/.//4
$d   /^$/d     3,5s///g    5s###2     s/.//2 ; s/.$// 
s/^(.)(.*)(.)$/\3\2\1/    s/^( )+//   s/([A-Z])/[\1]/g
编辑指令插入行ica     插入多行用\n分隔
导入r 导出w        复制追加H覆盖h剪切Gg

awk编程语言/数据处理引擎  可过滤数据及统计数据---列判断
awk [选项F[:/]]  '[条件]{指令}'  文件...     
指令:BEGIN{}  [条件]{}  END{}
条件：~ !~ /正则/    数值/字符串比较    逻辑比较   运算符
$7!~/bash$/{print $1,$7}     $2!=="xx"  NF>=2    && ||
NR%2==1      {i+=NF}    $3!=$4
seq 200 | awk 'BEGIN{i=0}($0%3==0)&&($0%13==0){i++}END{print "整除有:"i}'

内置变量:FS[=':']   $0整行文本   $n 指定列  $NF最后字段  NR行数  
数组:定义:数组名[下标]=元素值
       调用:数组名[下标]
       遍历:for(变量 in 数组名){print 数组名[变量]}

awk流程控制{逐行过滤}: if(条件){编辑指令}else if(条件){编辑指令2}.. ..else{编辑指令N}
awk -F: '{if($3<=1000){i++}else{j++}}END{print i,j}' /etc/passwd
awk  '{ip[$1]++} END{for(i in ip) {print i,ip[i]}}' /var/log/httpd/access_log | sort -nr


认证语句  语法   定义--调用    反向/七层代理  tcp/ip调度
缓存机制
请求<-->web-server<--socket<--FastCGI进程管理器<-->解释器

地址重写:   重写/分离
memcached缓存数据库查询数据，减少对数据库访问次数，提高web响应速度，共享session

Servlet 是在服务器上运行的小程序，java拓展web服务器功能的组件规范
varnish反向代理[加速]服务器--CDN

搜索引擎搜索，命令tab，了解软件的命令用途。

java--jdk软件开发工具包

版本库备份
subversion是一个自由开源的版本控制系统，sub管路下，文件/目录/代码存放在版本库里，记录每一次文件修改情况，并且能随时恢复回去以前版本，神奇的时间机器

VPN:子公司间通讯，翻墙  GRE  PPTP  SSL  L2TP+IPSec


时间同步一定要设置好，很多服务都需要时间一致

linux内核模块:lsmod已加载   modprobe 加载  modinfo 查看

Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。 
Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效

yum info 软件名       查看详细信息

IDE由cpu控制IO读写，写时不能堵塞，scsi由scsi卡控制读写，解放CPU
iscsi可被多个客户端挂载   iscsi服务端--客户端并ftp/nfs--ftp客户端
iscsi的Multipath多路径:冗余且负载均衡
DM-Multipath 映射器多路径
NFS可共享多个文件夹并设置不同权限,nfs与rpcbind服务
PRC远程过程调用协议:该协议允许运行于一台计算机的程序调用另一台计算机的程序
rpcbind用来提供RPC协议的支持
devfs---> sysfs--udev--hald--hal
 
hal硬件抽象:硬件的数据库，记录了硬件的属性，当前硬件有哪些等信息
hald守护进程:挂在hal套接字上等待事件，有事件发生时就调用相关函数处理
bus总线：计算机各种功能部件之间传送信息的公共通信干线，它是由导线组成的传输线束， 按照计算机所传输的信息种类，计算机的总线可以划分为数据总线、地址总线和控制总线，分别用来传输数据、数据地址和控制信号

集群:单一系统，提供同一服务，提高性能，降低成本，增强可靠性，提高可拓展性。
任务调度是集群系统中的核心技术

iptable  arptables：arp防火墙

lvs集群:vs/nat  vs/dr  vs/tun   vs/full-nat

子网掩码必须是32（也就是全255），网络地址与IP地址一样，广播地址与IP地址也一样。

集群[代理服务器]echo 'net.ipv4.ip_forward = 1' >> sysctl.conf  //开启路由转发

locale:现场

文件系统分为数据和元数据(描述文件特征的系统数据)
常见分布式文件系统:Lustre  Hadoop   FastDFS   Ceph   GlusterFS
Ceph软件定义存储:可以提供对象存储,块存储,文件系统存储
Ceph组件:OSDs  Monitors  RDB块  MDSs  RGW Client
块存储可进行快照，可为虚拟机通过librdb访问ceph提供存储盘

镜像:存储映射？

DBA
show variables like  ''; flush privileges;
DDL数据定义语言  DML数据操作语言 DCL数据控制语言 DTL数据事物语言
约束条件:null   not null  key(键值=索引)  default
存储引擎:show engines;默认InnoDB，可在配置文件指定
修改表结构:alter table 表名 执行动作
修改表内容:insert  update  select  delete   where 
锁粒度[]，锁类型
事物特性:A原子性 C一致性 I隔离性 D持久性
数据导入导出:导出内容由SQL查询语句决定，包括表记录，不包括字段名(重定向)，导出目录可设置
复制表:create table 新表名 sql查询语句；
多表/连接查询:通过存在相同意义字段连接多个表
where嵌套/子查询   多表查询   左连接查询  右连接查询
管理工具:命令行/图形化/浏览器(LAMP+phpMyAdmin)
(递归)授权与撤销授权  show grants [for  ..@..];
查询条件:范围/去重  is  正则  四则  聚集函数(统计)  排序 限制显示行数
数据备份:物理备份/逻辑备份
备份策略:完全备份/增量备份/差异备份
单独备份一个库，恢复的时候需要先建库 ，
实时增量备份binlog日志有三种格式，通过mysqlbinlog恢复数据
percona包含两个组件:innobackupex是以perl脚本封装xtrabackup(c程序)
主从同步原理:主启动binlog日志和server_id，从启用中继日志并运行两个线程
主从结构:单向复制，链式复制，互为主从，一主多从
复制模式:异步复制，全同步复制，半同步复制(默认关闭)
log-error : 启用错误日志 general-log：启用查询日志
slow-query-log：启用慢查询日志  log-bin：启用二进制日志
mysql体系结构:
连接池：检查是否有空闲的线程和是否有硬件资源分配给线程使用。
sql接口：把SQL命令传递给mysqld进程。
分析器：检查执行的SQL命令是否语法错误。
优化器：优化执行的SQL命令，以最节省硬件资源的方式运行。
查询缓存：存储客户端曾经查找过的sql记录。
存储引擎：访问表时，决定对表加锁的粒度。
文件系统：存储数据的存储设备（如硬盘）
管理工具：安装mysql数据库服务软件后自带的命令。
mysql性能优化:1.替代有问题的硬件/带宽
2.服务程序的运行参数调整(并发，缓存)   3.对sql查询进行优化





