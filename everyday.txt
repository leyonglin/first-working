:%s/foo/bar/gc

yft        　//复制当前行上光标到第一个t之间的所有内容

宏复制：   命令行模式qw---x-j-q--100@w

man： 如man 5 ssh_config
参数[-aw(显示所有手册路径)   -f简短描述信息 
n(指定章节手册) 1用户命令 2系统调用 3 c库函数调用 4.设备文件及特殊文件(/dev下的各种设备文件) 5配置文件 6系统游戏使用帮助 7附件/变量 8管理工具(root)及守护进程 9含糊的内核规范和接口]  

more：需要是可以编辑
按空白键（space）就往下一页显示，按 b 键就会往回（back）一页显示，而且还有搜寻字串的功能 ，在启动时就加载整个文件
参数：-n  定义屏幕大小为n(数字)行  -c   置顶显示   -s   把连续的多个空行显示为一行  +/pattern 在每个档案显示前搜寻该字串（pattern），然后从该字串前两行之后开始显示 
命令：=  输出当前行的行号    :f   输出文件名和当前行的行号    !命令  调用Shell，并执行命令

less:只能查看    可以向前向后翻页/查找   /keyword：从文件首部向文件尾部依次查找，不区分字符大小写   ？keyword：从文件尾部向文件首部依次查找
参数：-m  显示类似more命令的百分比    -N  显示每行的行号  -s  显示连续空行为一行   -i  忽略搜索时的大小写
命令：/字符串：向下搜索“字符串”的功能  ?字符串：向上搜索“字符串”的功能  [pagedown]：向下翻动一页  [pageup]：向上翻动一页
    浏览多个文件： :p 切换到file1   :n 切换到file2...    当正在浏览一个文件时，也可以使用 :e命令 打开另一个文件
     ma(string) 使用 a(string) 标记文本的当前位置   'a(string)  导航到标记 a(string) 处
	 
journalctl -u httpd.service  --since today -o json/json-pretty  -n20[-f]

npm是JavaScript世界的包管理工具，并且是Node.js平台的默认包管理工具。通过npm可以安装、共享、分发代码，管理项目依赖关系。能解决的NodeJS代码部署上的很多问题，允许用户从NPM服务器下载别人编写的第三方包到本地使用。允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。

git status   git brach(-v checkout)   git remote   git reset

Ctrl + a - 行前
Ctrl + e - 行后
Ctrl + k - 从光标删到行尾
Ctrl + u - 从光标删到行头
Ctrl + w - 从光标删当前单词
Ctrl + y - 粘贴
Ctrl + xx - 在两个标记字符之间切换
 
jinja2模板的基本语法：Template模板
模板的表达式都是包含在分隔符"{{}}"内的
控制语句都是包含在分隔符"{% %}"内的
模板支持注释，包含在分隔符"{# #}"内，支持块注释
字符串：使用单/双引号
数字：整数和浮点数(小数)
列表：[item1,item2..]
元组: (item1,item2..)
字典：{key1:value1,key2:value2..}
布尔型:true/false
算术运算：+ - * /  //(取整) %(取余)  **
比较操作： ==  !=  >  >=  <  <= 
逻辑运算:  and  or  not  
流表达式：For  If  When

常用程序：
1.ansible(ad-hoc)                                                用于临时性工作
2.ansible-doc -l[-a] / ansible-doc [-s] 模块名                   查看ansible模块的文档
3.ansible-console												 交互式工具
4.ansible-galaxy                                                 管理roles的工具/上传或下载优秀代码
5.ansible-playbook												 批量管理操作，主机剧本
6.ansible-vault                                                  管理加/解密yml文件
7.ansible-pull                                                   有两种工作模式pull/push，默认使用push模式，适用于大批量机器需要配置，效率几乎无限提升，但灵活性稍有欠缺

Ansible <host-pattern> [-m module] [-a args] [-v]
--version   -vv -vvv      -T超时时间  {-u远程执行用户 -k}  {-b sudo -K(sudo)}
host-pattern支持ip ，组名 ，all ，通配符 ，'ip1/组名:ip2' ，':&(并集)' ，':!' ，综合逻辑 ， 正则
[普通用户可通过授权得到高权限，sudo，可设置nopasswd]  [echo export EDITOR=vim >> /etc/profile.d/vim.sh -- source /etc/profile  -- visudo]

查看命令：
ansible-playbook --syntax-check playbook.yml                   检查playbook语法
ansible-playbook playbook.yml --list-hosts                     显示受影响的主机
ansible-playbook playbook.yml --limit ip/组名                  限制受影响的主机
ansible-playbook playbook.yml --list-tasks                     显示工作的task
ansible-playbook playbook.yml --list-tags                      显示将要运行的tag
ansible-playbook -C/--check  playbook.yml                      测试运行
ansible git -m setup [-a 'filter="ansible_hostname"']          查看主机信息,过滤支持通配符*
ansible-doc -l[-a] / ansible-doc [-s] 模块名                   查看ansible模块的文档
[all:children]
Template模板

ansible  all  -m  model_name  -a  "argument"
ansible-playbook [options] -e 'pkname=vsftpd' playbook.yml [playbook2 ...]  -f num

playbook语法进阶：变量：error，handlers(notify)，when,register，with_items，with_nested，tags，include and roles 

Roles：模块化。用于层次性，结构化的组织playbook


软件开发工具包（缩写：SDK、外语全称：Software Development Kit）一般都是一些软件工程师为特定的软件包、软件框架、硬件平台、操作系统等建立应用软件时的开发工具的集合。
JDK是 Java 语言的软件开发工具包，主要用于移动设备、嵌入式设备上的java应用程序。JDK是整个java开发的核心，它包含了JAVA的运行环境（JVM+Java系统类库）和JAVA工具。

Credentials证书
specify指定(spec)
kit装备/软件包
integration集成
external 外部的
Internal 内部的
contained包含
evaluated估计
subsequent后续
deploy部署
development发展
instance情况/实例
generic一般的
rectify the issue纠正这个问题
previous以前的
preserved correctly保存正确
instruction 指令
tutorial辅导的，教程
Release notes发行说明
concept概念
expect期望
Choose a tab below to see how this plays out in various contexts.
选择下面的一个标签，看看这在不同的环境中是如何进行的。
instructions说明
clicking点(单)击
orientation：方向
Troubleshooting寻找故障
prerequisites先决条件
strategies策略
constraint：限制
Scope：范围
infrastructure基础设施
customize定制
bypass绕过
Procedure程序
detached分离的,后台
recommended被推荐的
inspect检查
prompted提示
along(延伸)with  以及
goal目标
manipulate手动
complicated复杂的
explicitly明确的
significant意义
comma-separated逗号分隔
metrics度量
revision修订本
dashboards仪表盘
scenario方案
lag延迟  allocation分配  
raw：状态跟踪  
backlog：积压
pm：fpm进程      
buckets：桶，缓存   
orphans：孤儿，单独无关联   
scaling：定标; 缩放比例
fatal：致命的
fetch：取回
demonstrates显示
inventory 主机清单