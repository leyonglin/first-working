
Nginx：
优点：1.高并发-高性能   2.可拓展性好   3.高可靠性   4.热部署   5.BSD许可证
组成：1.nginx二进制可执行文件：由各模块源码编译出的一个文件
      2.nginx.conf配置文件：控制nginx的行为
	  3.access.log访问日志：记录每一条http请求信息
	  4.error.log错误日志：定位问题
nginx.org:nginx开源   nginx.com:nginx plus商业版
openresty.org：开源   openresty.com:商业版   ---      防火墙
Tengine是由淘宝网发起的Web服务器项目。它在Nginx的基础上,针对大访问量网站的需求,添加了很多高级功能和特性，但无法跟着nginx一起更新

wget http://nginx.org/download/nginx-1.14.2.tar.gz  && tar -xf nginx-1.14.2.tar.gz && cd nginx-1.14.2
cp -r contrib/vim/* ~/.vim/      语法高亮
src目录：源代码目录(框架)
查看可用参数：./configure --help | more      1.预编译时，找哪些文件作为辅助文件 */PATH    2.模块使用:添加--with-*   移除--without 
产生的中间文件会放在objs目录下，ngx_modules.c文件决定有哪些模块会被编译进去   
make编译，编译完成产生中间文件和二进制文件，存放在objs目录下。
make install 安装

nginx配置语法：
1.配置文件由指令(direct)与指令块构成，有些指令块可以设置名字，由模块决定的
2.每条指令以;结尾，指令(名)与一/多条参数间以空格符号分隔
3.指令块以{}大括号将多条指令组织在一起
4.include语句允许组合多个配置文件以提升可维护性
5.使用#符号添加注释
6.使用$符号使用变量
7.部分指令的参数支持正则表达式(location)
时间单位参数：ms--milliseconds  s--seconds  m--minutes  h--hours  d--days  w--weeks  M--months,30days   y--years,365days
空间单位参数: 默认(无单位)--bytes   k/K--kilobytes  n/M--megabytes  g/G--gigabytes
http配置的指令块:http  server  upstream(反代)  location 
nginx的下游(客户端)---nginx(反代)---nginx的上游(后端服务器)

模块文档：http://nginx.org/en/docs
ngx_http_autoindex_module                               使网站访问目录结构与服务器一致(共享)
ngx_http_core_module(模块) -- Embedded Variables        内置变量解释






nginx命令行
格式:nginx -s reload
帮助:-? -h   使用指定的配置文件:-c  指定(覆盖)配置指令:-g  指定运行目录:-p  发送信号:-s  stop|quit|reload|reopen(重新开始日志记录)  语法检查:-t/T   版本信息:-v/V 

热部署:1.备份旧的二进制文件nginx命令,复制objs目录下nginx到对应目录(make)  
    2.kill -USR2 PID(会再启动一个nginx的master进程)进行平滑升级
      kill -winch PID  旧的master下worker进程优雅退出，不在接受请求，但master进程不会自动退出，便于回退版本(reload旧的master起worker进程)
日志备份：1.将旧的改名    2.1 nginx -s reopen   2.2  kill -USR1 `cat ${pid_path}`(推荐)


1.网站根目录  
  location / {
    1.root dlib/;
    2.alias dlib/;
  }
2.压缩：gzip on;
3.显示结构:autoindex on;
4.限制大文件传输速度set $limit_rate 1K;
5.日志格式: 1. log_format  main(名字)  $...            不同url可以设置不同日志格式
            2. access_log  logs/access.log  main
6.listen ip/port    只监听ip的端口(默认0.0.0.0，所有IP)
7.upstream：反向代理 ngx_http_upstream_module 
8.cache缓存：ngx_http_proxy_module
9.GoAccess：日志可视化 https://goaccess.io/[get-started]    相当于生成html文件并启动进程，然后nginx访问该进程接口，由该进程推送最新变更。   
  1.安装软件包，启动：goaccess log_path -o html_path(生成结果存放路径) --real-time-html --time-format='%H:%M:%S' --date-format='%d/%b/%Y' --log-format=COMBINED
  2.在nginx配置文件里添加locate--指向生成的html路径

ssl3.0(Secure Sockets Layer安全套接层) ---> tls1.3(Transport Layer Security安全传输层协议)  
在表示层发挥作用，通过握手--交换密钥--告警--对称加密的应用数据   
TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256   TLS_ECDHE(密钥交换)_RSA(身份验证)_WITH_AES(算法)_128(强度)_GCM(分组模式)_SHA256(MAC/PRF签名hash算法)
对称加密：性能好，但会被破解      非对称加密：安全但性能差        
证书订阅人向登记机构申请并验证身份，通过CSR向CA申请颁发，CA传给证书订阅人公钥和私钥，并保留私钥，浏览器将证书部署在服务器上
客户访问web服务器，得到公钥，去向CRL服务器/OCSP响应程序验证是否有效，也可以由web服务器帮助客户端进项验证
证书类型：1.域名验证(DV)证书：仅验证域名归属(免费)  <  2.组织验证(OV)证书：验证机构信息(价格) <  3.拓展验证(EV)证书：更严格认证，浏览器url栏有可能会显示机构信息













