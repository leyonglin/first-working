
//百度文档 // 千峰教育：https://www.funtl.com/
SOA(service-oriented archtecture)面向服务架构：不可复用，根据需求通过网络对松散耦合的粗粒度应用组件进行分布式部署，组合和使用。服务层是SOA的基础，可以直解被调用，从而有效控制系统中与代理交互的人为依赖性
粒度似乎是根据项目模块划分的细致程度区分的，一个项目模块（或子模块）分得越多，每个模块（或子模块）越小，负责的工作越细，就说粒度越细，否则为粗粒度
粗粒度和细粒度的区别主要是出于重用的目的,像类的设计,为尽可能重用,所以采用细粒度的设计模式,将一个复杂的类(粗粒度)拆分成高度重用的职责清晰的类(细粒度).
对于数据库的设计,原责:尽量减少表的数量与表与表之间的连接,能够设计成一个表的情况就不需要细分,所以可考虑使用粗粒度的设计方式， 根据控制对象的粗细程度，访问控制可分为粗粒度和细粒度两种 通常把规定访问整个数据库表或由基本表导出的视图的某个层称为粗粒度的访问控制，而细粒度控制则是把安全控制细化到数据库的行级或列级
BPM，即业务流程管理，是一种以规范化的构造端到端的卓越业务流程为中心，以持续的提高组织业务绩效为目的的系统化方法，常见商业管理教育如EMBA、MBA等均将BPM包含在内。

微服务是在 SOA 上做的升华

ESB全称为Enterprise Service Bus，即企业服务总线。它是传统中间件技术与XML、Web服务等技术结合的产物。ESB提供了网络中最基本的连接中枢，是构筑企业神经系统的必要元素。ESB的出现改变了传统的软件架构，可以提供比传统中间件产品更为廉价的解决方案，同时它还可以消除不同应用之间的技术差异，让不同的应用服务器协调运作，实现了不同服务之间的通信与整合。
从功能上看，ESB提供了事件驱动和文档导向的处理模式，以及分布式的运行管理机制，它支持基于内容的路由和过滤，具备了复杂数据的传输能力，并可以提供一系列的标准接口。

微服务MSA使用轻量级机制通信，通常是http api(REST)服务能够通过自动化部署机制来独立部署，服务可以使用不同的编程语言实现，以及不同数据存储技术，并保持最低限度的集中式管理
优点：复杂度可控(简单化)  灵活可拓展(去中心化)  独立部署(高效发布)  开发针对性强  降低TCO(总拥有成本)
缺点：运维开销   Development和Operations   隐式接口


对内rpc 对外rest
SOA和微服务架构一个层面的东西，是架构风格和方法，
ESB和微服务网关是一个层面的东西，一个谈的是实现工具或组件
SOA：面向服务架构，面向服务的架构（SOA）是一个组件模型，它将应用程序的不同功能单元（称为服务）进行拆分，并通过这些服务之间定义良好的接口和契约联系起来。接口是采用中立的方式进行定义的，它应该独立于实现服务的硬件平台、操作系统和编程语言。这使得构建在各种各样的系统中的服务可以以一种统一和通用的方式进行交互。
ESB全称为Enterprise Service Bus，即企业服务总线。

现代框架：spring boot

CAP：C一致性(底线) ，A可用性 ，P分区容错性
cap权衡：BASE是Basically Available（基本可用）、Soft state（软状态：不同中间状态）和Eventually consistent（最终一致性）

Iaas 基础设施即服务
PaaS 平台即服务
SaaS 软件即服务
BaaS 区块链即服务

图灵完备：在可计算性理论里，如果一系列操作数据的规则（如指令集、编程语言、细胞自动机）可以用来模拟单带图灵机，那么它是图灵完备的。这个词源于引入图灵机概念的数学家艾伦·图灵。虽然图灵机会受到储存能力的物理限制，图灵完全性通常指“具有无限存储能力的通用物理机器或编程语言”

window server：桌面可选，非桌面：powershell

LTS：长期支持版本
X64架构：指令集不同？

ubuntu引导模式：MBR  // UEFI
linux引导模式：GRUB 引导寻找操作系统的接口 接口在磁盘的0磁道上 安装初始化配置 过程及各种驱动


ctrl+insert  复制
shift+insert 粘贴

主线程    同步执行/阻塞/交互
工作线程  异步执行
当您同步执行某项任务时，您将等待它完成，然后再转到另一项任务。当您异步执行某项任务时，您可以在它完成之前转移到另一个任务。

stat ：输出指定格式  top ps du df free netstat/ss kill

压缩算法需要和cpu相配合

yum autoremove

linux内核都会有root用户
ubuntu可以为root设置密码并打开密码登陆

Hpervisor：又称虚拟机监视器（英语：virtual machine monitor，缩写为 VMM），是用来创建与运行虚拟机的软件、固件或硬件。
docker：共享宿主机资源，docker可以在docker容器中运行，虚拟机环境不能再装虚拟机

https://get.docker.com/

虚悬镜像：更新时，旧的同名镜像层<none>，没什么用(pull/build时产生的)     docker image prune 可清除








