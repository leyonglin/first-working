
jenkins:
持续集成(CI)：1.降低风险   2.减少重复过程   3.增强项目可见性  4.随时可以生成可部署软件
持续部署/交付(CD)


创建project(job)
创建视图--可以添加现有/创建多个-->创建project(job)
manage jenkins(全局配置) --》configure system--》Publish over SSH(连接主机) 








在官网下载软件包：https://jenkins.io/
百度搜索：jenkins自动部署

yum源
wget http://pkg.jenkins.io/redhat/jenkins.repo
rpm --import http://pkg.jenkins.io/redhat/jenkins.io.key

安装：
yum install java-1.8.0-openjdk.x86_64  &&  java -version  &&  rpm -ql java-1.8.0-openjdk.x86_64
yum install maven git  && mvn -v  &&  git --version
yum install jenkins(参考下载地址：https://pkg.jenkins.io/redhat-stable/)  &&  rpm -ql pk_name

使用：
访问：ip:8080(默认)  &&  安装Jenkins-Maven插件Maven Integration  && 安全设置
系统管理 -- 全局配置 --  JDK(JAVA_HOME /usr/lib/jvm/java-1.8.0-openjdk) -- maven(MAVEN_HOME /usr/share/maven)
注意：jenkins启动用户是默认连接用户
Gitlab的Webhook功能，通过Webhook的相关设置，可以实现代码Push后自动去触发jenkins上的构建动作(插件:gitlab hook)
 1.gitlab上项目设置--integrations-- 添加webhooks  2.admin区域设置--network(外发请求)



一个view试图(公司),下面有job任务(应用程序:实例),创建实例的时候可以用复制。 

首页--系统管理可设置相关配置：包括maven路径
svn：
拉取代码：新建任务--创建自由风格的软件项目--源码管理---选择相关版本控制工具[svn地址@HEAD:这是为了钩子程序下载最新版本--仅针对某些版本]
构建方式：首页--工程(右边)--configure--构建--Invoke top-level Maven targets--调用maven target
查看构建：首页--工程(右边)---立即构建---点击左下角构建进度的三角号---console output可以看到构建过程
查看代码：首页--工程(右边)--工作区--可以看见拉取的代码
查看状态：首页--可以通过M的标识看见成功率(Legend)
部署代码：首页--工程(右边)--configure--构建后动作--Deploy war/ear to a container（需要插件） -- 部署完再构建会将war包部署到对应服务器上(console output/tomcat日志都可以查看)
访问触发：首页--工程(右边)--configure--构建触发器--Trigger builds remotely--设置url
		  浏览器访问这个地址：当前url去掉configure(JENKINS_URL/job/apple1/build?token=)TOKEN_NAME(自定义) 
钩子程序：在版本控制工具的仓库/工程名称/hooks/post-commit(复制post-commit.tmpl)--配置完整的curl命令---755权限
   curl  -X(请求方式)  -v(响应结果)  -u(携带用户名和密码)  -H(携带请求消息头信息) 
   	   curl-X post -v -u[账号]:[密码]  -H"请求消息头信息"  [上述]url
   	      首页--用户--用户id(标识)--configure--API Token
   		     请求消息头信息：Crumb Algorithm:API Token

github：
github中的webhook=svn中的hooks      在项目的settings--webhooks  再把jenkins  首页--系统管理--全局安全配置--关闭防止网站点请求伪造
首页---系统管理---全局工具配置---配置git 




Apache Ant,是一个将软件编译、测试、部署等步骤联系在一起加以自动化的一个工具，大多用于Java环境中的软件开发
Ant的构建文件
当开始一个新的项目时，首先应该编写Ant构建文件。构建文件定义了构建过程，并被团队开发 中每个人使用。Ant构建文件默认名为build.xml，也可以取其他的名字。只不过在运行的时候 把这个命名当作参数传给Ant。构建文件可以放在任何的位置。一般做法是放在项目顶层目录中。 这样可以保持项目的简洁和清晰。下面是一个典型的项目层次结构。
(1) src存放文件。
(2) class存放编译后的文件。
(3) lib存放第三方JAR包。
(4) dist存放打包，发布以后的代码。
Ant构建文件是XML文件。每个构建文件定义一个唯一的项目(Project元素)。每个项目下可以定 义很多目标(target元素)，这些目标之间可以有依赖关系。当执行这类目标时，需要执行他们所 依赖的目标。每个目标中可以定义多个任务，目标中还定义了所要执行的任务序列。Ant在构建目标时必须调 用所定义的任务。任务定义了Ant实际执行的命令。Ant中的任务可以为3类。
（1） 核心任务。核心任务是Ant自带的任务。
（2） 可选任务。可选任务是来自第三方的任务，因此需要一个附加的JAR文件。
（3） 用户自定义的任务。用户自定义的任务是用户自己开发的任务。


WordPress致力于改善博客外观，提升博客性能，同时使它产生的html代码符合网络标准。
它是一个高级的博客工具，提供了一套完整丰富的功能。在管理面板上，可设置显示效果及各种功能，轻松地撰写日志,然后按下按钮，就能将它立即发表到因特网上！
"博客"是"网络博客"(weblog)的缩写，是指以时间为顺序记录信息并保持更新的网站。它通常是以日记形式撰写的个人主页，还包含其它网站的链接。
从个人生活到政治话题都可成为博客内容，也就是说，它可以只涉及单个狭窄主题也可以包括所有主题范围。










