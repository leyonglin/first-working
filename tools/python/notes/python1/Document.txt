 
01： Python简介 Python程序 Python核心数据类型及内置对象 表达式 运算符

文档：
python 库函数
https://github.com/jackfrued/Python-100-Days
https://docs.python.org/zh-cn/3/library/index.html

.py      python文件
.c        c语言
.cpp    c++
.java    java
.exe    window可执行文件
.dll     动态库文件

数字：把其他进制转换成十进制用乘法，十进制转换成其他进制是求余
整型：
      二进制：0b
      八进制：0o
      十六进制：0x  (0~9 a~f)
浮点数：
      小数形式：3.     .14
      科学计数法 ：小数指数(e/E) 6.18E-1 = 0.618    2.99e3 = 2990
复数：complex
      实部(real)   
      虚部(image)   以j/J结尾 
布尔型数 bool
      True     1
      False    0
空值None：表示不存在的特殊对象
作用：用来占位    变量解除绑定

表达式：数字+运算符    括号()可以提高优先级
算术运算符：
   +    加
   -    减
   *    乘
   /    除
   //   地板除/向下取整
   %    求余
   **   幂运算
混合类型自动升级：1.5+1.5=3.0


变量是关联一个对象的标识符：字母与下划线开头,后跟字母/下划线/数字,不能使用python关键字作为变量
变量可以绑定一个对象，并可以通过变量名来使用这个对象
赋值语句：创建并绑定变量
    变量名1(=变量名2...)=表达式
    变量名1,变量名2,...=序列
python中自动化内存管理和引用计数
   python中，变量没有类型
   关联/绑定/引用都是指一个变量和一个对象的关联关系
查看变量：help("__main__")   
删除变量：del 变量                     #解除绑定关系
is/is not 运算符   #判断两个对象是否为一个对象(内存地址)，并返回True/False(a=b才算绑定一个对象   -5到256区间的数字永远存在于小整数池中，是例外)
id(x)    #函数，返回对象的内存地址


02： Python变量 基本输入输出 关系运算 布尔运算 条件语句
 
复合赋值算术运算符：+=  -=  *= ...
 变量  运算符=值 -->  y += x 

比较运算符：  <   <=   >   >=   ==   != 
         语法：左表达式 > 右比较式   (特殊 a <= x <= b > c...)    比较运算符通常返回布尔类型的值  

数值对象的构造(创建)函数：转换
a = 3.14 ； b=3 ,  y = int(a,base=10)/float(b)/complex(a,b)/bool(a)    #逗号用来分隔数据或变量

bool函数：bool假值情况
None   False    0    0.0   0j     ' '    [ ]     ( )    { }    set( )            #一切空容器

浮点数在计算机内部会转换成二进制，因此3.14-3  != 0.14        #精度损失

abs(x)  #绝对值函数
round()    #函数，先进行二进制转换再进行四舍五入
pow(x,y,z=None)   #函数幂运算，即x**y%z 

帮助函数：help()  /  help(object)    //  或者从官网查找文档搜索查找
基本输入函数  input('提示字符串')   返回用户输入的字符串
基本输出函数  print(value,...,sep=' ',end='\n')     #将一系列值以字符串形式输出到标准输出设备上，sep：两个值之间的分隔符，默认是一个空格。end：输出完毕后在末尾自动追加一个字符
1.a=5 ； b=6  ； print(a, '+', b, '+', a+b, ...)      #可输出数字/字符串/变量
2.hour = input("num:")
   print(hour * 60)       #字符串是可以相乘的
   hour = int(hour)
   print(hour * 60)

语句 statement
语句是由一些表达式组成，通常一条语句可以独立执行来完成一部分事情并形成结果，多条语句写在一行需要用分号(;) 分开  建议一条语句写一行

显示换行：
   折行符 \    #必须放在一行末尾，来示意解释执行器的下一行也是本行内容
   隐式换行：括/引号 必须成对出现

if 语句：让程序根据条件选择性的执行某条语句或某些语句
语法： 
  if  真值表达式1：      #必须有，其他视情况而定，真值表达式值为bool值
       语句块1              #建议缩进四个空格，表示该语句是被包含的
  elif  真值表达式2：
       语句块2
...
else:
       语句块n

条件表达式：根据真值表达式的取值(Ture/False)来决定执行表达式1或者表达式2并返回结果
   语法： 表达式1  if  真值表达式2  else 表达式2

pass语句：通常用来填充语法空白

布尔运算符： not  and  or
   not  表达式x     #对x进行布尔值取非
   x  and  y         #优先返回假值对象，当x的布尔值为False时，返回x，否则返回y   例如 100 and 200 ， 100(True)返回200
   x  or    y          #优先返回真值对象 ，当x的布尔值为True时，返回x，否则返回y  例如 0 or 0.0   返回0.0

正负号运算符：一元运算符
+(正号)   -(负号)



03： 字符串 字符串访问 Raw字符串 字符串格式化

字符串 str ：用来记录文字信息(存放字符串类型的容器)
    表示方法：在非注释中凡是用引号括起来的部分都是字符串   单引号'/双引号"/三单引号'''/三双引号"""
         空字符串的字面值的表达方式  ''   ""  ''''''   """"""    # bool测值为False
    引号成对出现，三引号可以自动折行
		 1.s = 'aaa\nbbb'
		 print(s)
		 2.s1 = '''aaa
		 bbb'''
		 print(s1)
	用转义序列\显示特殊字符
       \'          代表一个单引号
       \"          代表一个双引号
       \n          代表一个换行符
       \\          代表一个反斜杠
       \r          返回光标至行首   print("ABCD\rab")
       \t          水平制表符
       \f          换页
       \v	        垂直制表符
       \b          倒退
       \0          字符串0
       \0oo        oo为两位八进制表示的字符
       \xXX        XX为两位十六进制表示的字符  
       \uXXXX      Unicode 16的十六进制的字符(汉字)
       \UXXXXXXXX  Unicode 32的十六进制表示的字符(汉字)
		
		ascii编码(0~127)
		UNICODE编码(0~65535)

字符在计算机内部是图片形式存在的，在计算下通讯过程传输的是图片的编码(进制数字)	
常用ascii编码：美国标准码/信息交换	
字符      十进制    十六进制
'0'        48        0x30
'A'        65        0x41
'a'        97        0x61

print("\x31\x30")      -->  10  
print("\x77\x65\x69")  --> wei
0-127 表示英文

序列的概念：有序排列(都支持索引和切片)   
	 字符串是序列     len() 求长度
	 raw 字符串(原始字符串)   让转义字符\无效
	 格式： r'字符串'(引号可以是别的引号)
	 
字符串的运算：
	运算符： +  +=  *  *=
	+ 加号运算符用于拼接字符串
	+= 用于拼接运算后改变原变量的绑定关系
    *  *=  数字必须是整数
	
字符串比较运算
	运算符： <  <=  >  >=  ==  !=  （ascii码的比较）
 
in  /  not in 运算符（和is不同）
	in用于序列，字典，集合中，用于判断某个值是否存在于容器中，存在返回True，否则返回False
    格式：  对象  in/not in  序列

索引 index：得到一个元素
	python字符串是不可以改变的序列
	所有的序列都可以通过索引来获取其中的数据元素
    语法：字符串[整数表达式]
	正向索引从0开始，最后一个索引为len(x)-1     反向索引从-1开始，即最后一个，第一个是-len(s)
	
切片  slice：(得到多个元素)从字符串序列中取出相应的元素重新自称一个字符串序列
	语法：s[(开始索引b):(结束索引e)(:(步长s))]
    1.0代表第一个元素，-1代表最后一个元素  2.结束索引是切片的终止索引(但不包括终止点) 3.步长是切片每次获取完当前元素后移动的方向和偏移量

python3中能用于字符串的函数
	len(x)  返回字符串长度
	max(x)  返回编码值最大的字符
	min(x)  返回最小编码值的字符

字符串编码转换函数：
	ord(c)  返回一个字符c的unicode编码值
	chr(i)  返回i这个值所对应的字符
	
整数转字符串的函数
	bin(i)       将整数转换成二进制字符串
	oct(i)       将整数转换成八进制字符串，将二进制三位一组转换过来的
	hex(i)       将整数转换成十六进制字符串，将二进制四位一组转换过来的

字符串的构造(创建)函数	
	str(object)      将对象转换成字符串
	查看方法：help(str)

python3中常用的字符串方法(method)
    方法的调用语法：对象.方法名(方法传参)
	s.isalpha()                                 是否都为字母
	s.isdigit()                                 数字
	s.islower()                                 小写
	s.isupper()                                 大写
	s.isspace()                                 空白字符(\n,\t ...)
	s.center(width[,fill])                      居中，左右默认填充空格
	s.count(sub)                                获取一个字符串中子串的个数(sub为子串字符)
	s.count(sub[,start[,end]])                  获取一个字符串中子串的个数
	s.find(sub[,start[,end]])                   获取字符串中子串sub的索引，失败返回-1，成功返回字符位置
	s.strip([chars])                            去掉左右char字符的字符串
	s.lstrip([chars])
	s.rstrip([chars])
	s.upper()                                   大写
	s.lower()									小写
	s.replace(old,new[,count])                  替换count次数
	s.startswith(prefix[,start[,end]])			以prefix开头
	s.endswith(suffix[,start[,end]])            以suffix结尾
	s.isnumeric()                               是否权威数字字符



04： while循环语句 break continue for in 循环

字符串格式化表达式：生成一定格式的字符串
    运算符(占位符)：%
    语法格式： 格式字符串 % 参数值   或  格式字符串 % (参数值1, 参数值2, ...)
		1.fmt = "name: %s, age: %d"
          s= fmt % ('lly', 35)
          print(s)
		2. "%d%%" % 95   --->  95%
	格式化字符串中的占位符和类型码
	%s       字符串，使用str(x)将x转换为字符串
	%r       字符串，使用repr(x)将x转换成字符串('表达式')
	%c       整数转为单个字符(数字转字符)
	%d       转为十进制整数
	%o       转为八进制整数
	%x       十六进制整数(a-f)
	%X       十六进制整数(A-F)
	%e       指数型浮点数(e)
	%E       指数型浮点数(E)
	%f,%F    浮点数(小数形式)
   	%g,%G    智能在指数和浮点数之间选择一个表示
	%%       等同于%

占位符和类型码之间的格式化语法：
	% [- + 0 宽度·精度] 类 型码
	-   ：左对齐
	+   ：显示正号
	0   ：左侧空白位置补零
	宽度：整个字符串的字符个数
	精度：保留小数点后多少位(默认6位)
       pi=3.141592535897932
	   "-+%07.2f"  %  pi  --> -+0003.14     # "-+%07.2f"是一个字符串，左对齐(-)显示正号(+)左侧空白位置补零(0)宽度7(7)小数点2(2)

两种循环：
while 语句：根据一定条件，重复的执行一条语句或多条语句
    语法：
	while 真值表达式：            # bool(真值表达式)
        语句块1
    else：
        语句块2

while 语句的嵌套(语句是可以嵌套的)：while 语句本身是语句，和其他语句一样，可以嵌套到任何复合语句中

break语句：用于循环语句(while,for语句)中，用来终止当前循环语句的执行
语法：break
	1.break语句通常于if语句组合使用  2.终止循环时，else子句的语句将不会执行  3.break仅跳出当前循环

死循环：死循环是指条件一直成立的循环，通常用break语句来终止循环，死循环的else子句永远不会被执行




05： 列表 列表访问 列表常用方法 列表推导式

for 语句：用来遍历可迭代对象的数据元素，可迭代对象是指能依次获取数据元素的对象
可迭代对象包括：字符串str   列表list   元组tuple ...
语法：
	for 变量列表 in 可迭代对象:
		语句块1
	else:
		语句块2
		
range 函数 ：和for搭配的时候只被调用一次
    range(start, stop[,step]) 用来生产0~num区间内step步长的整数，不包含num
	用来创建一个生成一系列整数的可迭代对象(整数序列生成器)

for 嵌套：乘法的效果

continue 语句：用于循环语句(while,for)中，不再执行本次循环continue之后的语句，重新开始一次新的循环
	语法：continue
	1. 在while语句中执行continue，将会直接跳转到while语句的真值表达式处重新判断循环条件
	2.在for语句中执行continue语句，将会从可迭代对象中取下一个元素，绑定变量后再次进行循环

循环小结：四条语句：  while语句   for语句  break语句   continue语句


list：1.是一种容器  2.是可以被改变的序列  3.由一系列特定(不限类型)元素组成的，元素与元素之间可以没有任何关联关系，但有先后顺序关系

python3中的序列类型： 字符串str  列表list  元组tuple   字节串bytes   字节数组bytearray
创建列表的字面值表达式： 1. [x,y,...] #创建一个列表   2. L = [x,y,...] #变量L绑定一个新创建的列表
列表的构建函数list:
	1. list()  #生成一个空列表，等同于[]    2.list(iterable) #用可迭代对象创建一个列表
列表的运算：
	算术运算：+   +=   *   *=   #运算规则与字符串的运算规则相同
	语法：列表变量 += 可迭代对象
#列表是可变对象，+=是修改原来的对象；字符串是不可变对象，+=是创建新的对象，让变量绑定新的对象---> id(x)

列表的比较运算：
	运算符：<   <=   >   >=   ==   !=   #与字符串一样
列表是可迭代对象
# a=input('请输入')
# b=input('请输入')
# c=input('请输入')
# L=[]
# 1.
# L += a
# L += b
# L += c
# 2.
# L += [a]
# L += [b]
# L += [c]
# 3.
# L=[a,b,c]
# print(L)






06： 元组 元组常用方法

07： 字典 字典常用方法

08： 集合 集合推导式

09： 函数 函数参数传递

010： 递归函数 作用域













